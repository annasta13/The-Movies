# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Build
      uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
      with:
        arguments: build
        
  unit-test:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Unit Test
      run: ./gradlew testDebugUnitTest
    - name: Android Test Report
      uses: asadmansr/android-test-report-action@v1.2.0
      if: ${{ always() }} # IMPORTANT: run Android Test Report regardless
    - name: Upload test report
      uses: actions/upload-artifact@v2
      with:
        name: unit_test_report
        path: app/build/reports/tests/testDebugUnitTest/
    - name: Upload test report
      run: cat report.html
      working-directory: robot/reports/tests/testDebugUnitTest/
        
  build-android-apk:
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: cache-${{ runner.os }}-${{ matrix.jdk }}-gradle-${{ hashFiles('*/.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build Android APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        run: cat android.applicationVariants.all { variant ->variant.outputs.all {outputFileName = "the singers-${variant.buildType.name}-${variant.versionName}.apk"}}
        working-directory: robot/apk

